feat(backend): Implement Phase 1 - Railway deployment preparation

Tasks Completed:
✅ Task #1: Display all API endpoints on server startup
✅ Task #3: Add ADMIN_PASSWORD environment variable with validation
✅ Task #4: Update .env.example with Railway secret() syntax

Implementation Details:

1. Route Discovery System
   - Created src/utils/routeDiscovery.ts utility
   - Displays all 22 endpoints with Method + Path + Description
   - Organized by categories: Health, Storage, Files, Folders
   - Updated src/server.ts startup to show formatted endpoint table

2. Admin Password Authentication
   - Generated secure 32-char password: fRqDHuqlGbCHAcLopGcaF1HBYL6ouXf3
   - Added ADMIN_PASSWORD to .env file
   - Updated StorageConfigurationRequest type with optional adminPassword
   - Implemented case-sensitive password validation in storage controller
   - Automatic lock restoration after failed reconfiguration
   - Fixed validation middleware to allow adminPassword field

3. Railway Deployment Preparation
   - Updated .env.example with ${{secret()}} syntax for Railway
   - Added local generation instructions for developers
   - Documented all three secrets: ENCRYPTION_KEY, API_KEY, ADMIN_PASSWORD

Security Features:
- Case-sensitive password comparison
- Proper HTTP status codes (403/401)
- No password leakage in logs
- Automatic lock restoration on failure
- Clear error messages for authentication

Testing:
- All 7 tests passed (100% success rate)
- Server health check validated
- Admin password authentication flow verified
- Lock restoration mechanism confirmed
- Case-sensitivity validated

Files Modified (7):
- src/server.ts - Route discovery integration
- src/types/storage.types.ts - Added adminPassword field
- src/controllers/storage.controller.ts - Admin auth logic
- src/middleware/validation.middleware.ts - Schema update for adminPassword
- .env - Added ADMIN_PASSWORD
- .env.example - Railway syntax
- README.md - Documentation updates

Files Created (5):
- src/utils/routeDiscovery.ts - Route discovery utility (175 lines)
- docs/PHASE1_IMPLEMENTATION_REPORT.md - Complete implementation guide
- docs/PHASE1_TESTING_REPORT.md - Test results and validation
- docs/PHASE1_QUICK_REFERENCE.md - Quick reference card
- docs/PHASE1_COMMIT_MESSAGE.txt - This commit message

Breaking Changes: None
Backward Compatible: Yes

Next Steps:
- Frontend integration for admin password input
- Phase 2: Database migration to SQLite/Postgres
- Railway deployment with auto-generated secrets
